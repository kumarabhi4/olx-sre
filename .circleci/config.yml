# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    description: "prints the Circle CI Workflow ID"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "print hello"
          command: "echo Hello"

  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "print world"
          command: "echo World!"
  print_my_name:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run:
          name: "my name"
          command: echo $MY_NAME
  
  save_hello_world_output:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run:
          name: "save hello world output"
          command: echo "Hello World" > output.txt
      - persist_to_workspace:
          root: .
          paths:
            - output.txt

  print_output_file:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "get hello world output"
          command: cat output.txt

  use_command:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - print_pipeline_id
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - use_command